{"version":3,"sources":["questions.js"],"names":["express","require","router","Router","questions","id","createdOn","createdBy","meetup","title","body","votes","get","req","res","status","json","data","patch","qry","find","c","parseInt","params","error","qryId","upvote","module","exports"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;;AAEA,IAAMC,SAASF,QAAQG,MAAR,EAAf;;AAEA,IAAMC,YAAY,CAChB;AACEC,MAAI,CADN;AAEEC,aAAW,YAFb;AAGEC,aAAW,CAHb;AAIEC,UAAQ,CAJV;AAKEC,SAAO,KALT;AAMEC,QAAM,gCANR;AAOEC,SAAO;AAPT,CADgB,EAUhB;AACEN,MAAI,CADN;AAEEC,aAAW,YAFb;AAGEC,aAAW,CAHb;AAIEC,UAAQ,CAJV;AAKEC,SAAO,MALT;AAMEC,QAAM,qDANR;AAOEC,SAAO;AAPT,CAVgB,CAAlB;;AAqBAT,OAAOU,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC5BA,MAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,YAAQ,GADW;AAEnBE,UAAMb;AAFa,GAArB;AAID,CALD;;AAOAF,OAAOgB,KAAP,CAAa,aAAb,EAA4B,UAACL,GAAD,EAAMC,GAAN,EAAc;AACxC,MAAMK,MAAMf,UAAUgB,IAAV,CAAe;AAAA,WAAKC,EAAEhB,EAAF,KAASiB,SAAST,IAAIU,MAAJ,CAAWlB,EAApB,EAAwB,EAAxB,CAAd;AAAA,GAAf,CAAZ;AACA,MAAI,CAACc,GAAL,EAAU;AACRL,QAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,cAAQ,GADW;AAEnBS,aAAO;AAFY,KAArB;AAID,GALD,MAKO;AACL,QAAIC,QAAQH,SAAST,IAAIU,MAAJ,CAAWlB,EAApB,EAAwB,EAAxB,CAAZ;AACAoB,aAAS,CAAT;AACA,QAAIC,SAAStB,UAAUqB,KAAV,EAAiBd,KAA9B;AACAe,cAAU,CAAV;AACAtB,cAAUqB,KAAV,EAAiBd,KAAjB,GAAyBe,MAAzB;AACAZ,QAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,cAAQ,GADW;AAEnBE,YAAM,CAACE,GAAD;AAFa,KAArB;AAID;AACF,CAlBD;;AAoBAjB,OAAOgB,KAAP,CAAa,eAAb,EAA8B,UAACL,GAAD,EAAMC,GAAN,EAAc;AAC1C,MAAMK,MAAMf,UAAUgB,IAAV,CAAe;AAAA,WAAKC,EAAEhB,EAAF,KAASiB,SAAST,IAAIU,MAAJ,CAAWlB,EAApB,EAAwB,EAAxB,CAAd;AAAA,GAAf,CAAZ;AACA,MAAI,CAACc,GAAL,EAAU;AACRL,QAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,cAAQ,GADW;AAEnBS,aAAO;AAFY,KAArB;AAID,GALD,MAKO;AACL,QAAIC,QAAQH,SAAST,IAAIU,MAAJ,CAAWlB,EAApB,EAAwB,EAAxB,CAAZ;AACAoB,aAAS,CAAT;AACA,QAAIC,SAAStB,UAAUqB,KAAV,EAAiBd,KAA9B;AACAe,cAAU,CAAV;AACAtB,cAAUqB,KAAV,EAAiBd,KAAjB,GAAyBe,MAAzB;AACAZ,QAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,cAAQ,GADW;AAEnBE,YAAM,CAACE,GAAD;AAFa,KAArB;AAID;AACF,CAlBD;;AAoBAQ,OAAOC,OAAP,GAAiB1B,MAAjB","file":"questions.js","sourceRoot":"/home/emile/Desktop/Endpoint/api/v1","sourcesContent":["const express = require('express');\n\nconst router = express.Router();\n\nconst questions = [\n  {\n    id: 1,\n    createdOn: '2019-01-20',\n    createdBy: 1,\n    meetup: 2,\n    title: 'Why',\n    body: 'Why is it do you choose youth?',\n    votes: 0,\n  },\n  {\n    id: 2,\n    createdOn: '2019-01-20',\n    createdBy: 1,\n    meetup: 2,\n    title: 'What',\n    body: 'What do you expect to be the output of this meetup?',\n    votes: 15,\n  },\n];\n\nrouter.get('/', (req, res) => {\n  res.status(200).json({\n    status: 200,\n    data: questions,\n  });\n});\n\nrouter.patch('/:id/upvote', (req, res) => {\n  const qry = questions.find(c => c.id === parseInt(req.params.id, 10));\n  if (!qry) {\n    res.status(404).json({\n      status: 404,\n      error: 'Question can\\'t be found',\n    });\n  } else {\n    let qryId = parseInt(req.params.id, 10);\n    qryId -= 1;\n    let upvote = questions[qryId].votes;\n    upvote += 1;\n    questions[qryId].votes = upvote;\n    res.status(200).json({\n      status: 200,\n      data: [qry],\n    });\n  }\n});\n\nrouter.patch('/:id/downvote', (req, res) => {\n  const qry = questions.find(c => c.id === parseInt(req.params.id, 10));\n  if (!qry) {\n    res.status(404).json({\n      status: 404,\n      error: 'Question can\\'t be found',\n    });\n  } else {\n    let qryId = parseInt(req.params.id, 10);\n    qryId -= 1;\n    let upvote = questions[qryId].votes;\n    upvote -= 1;\n    questions[qryId].votes = upvote;\n    res.status(200).json({\n      status: 200,\n      data: [qry],\n    });\n  }\n});\n\nmodule.exports = router;\n"]}
{"version":3,"sources":["users.js"],"names":["express","require","router","Router","users","id","firstname","lastname","othername","email","phoneNumber","username","registered","isAdmin","get","req","res","status","json","data","usr","find","c","topic","parseInt","params","error","post","body","addUser","length","createdOn","location","images","happeningOn","tags","push","module","exports"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;;AAEA,IAAMC,SAASF,QAAQG,MAAR,EAAf;AACA,IAAMC,QAAQ,CACZ;AACEC,MAAI,CADN;AAEEC,aAAW,MAFb;AAGEC,YAAU,OAHZ;AAIEC,aAAW,MAJb;AAKEC,SAAO,gBALT;AAMEC,eAAa,YANf;AAOEC,YAAU,WAPZ;AAQEC,cAAY,YARd;AASEC,WAAS;AATX,CADY,EAYZ;AACER,MAAI,CADN;AAEEC,aAAW,QAFb;AAGEC,YAAU,OAHZ;AAIEC,aAAW,MAJb;AAKEC,SAAO,gBALT;AAMEC,eAAa,YANf;AAOEC,YAAU,WAPZ;AAQEC,cAAY,YARd;AASEC,WAAS;AATX,CAZY,CAAd;;AA0BAX,OAAOY,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC5BA,MAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,YAAQ,GADW;AAEnBE,UAAMf;AAFa,GAArB;AAID,CALD;;AAOAF,OAAOY,GAAP,CAAW,MAAX,EAAmB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC/B,MAAMI,MAAMhB,MAAMiB,IAAN,CAAW;AAAA,WAAKC,EAAEC,KAAF,KAAYC,SAAST,IAAIU,MAAJ,CAAWpB,EAApB,EAAwB,EAAxB,CAAjB;AAAA,GAAX,CAAZ;AACA,MAAIe,GAAJ,EAAS;AACPJ,QAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,cAAQ,GADW;AAEnBE,YAAMC;AAFa,KAArB;AAID,GALD,MAKO;AACLJ,QAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,cAAQ,GADW;AAEnBS,aAAO;AAFY,KAArB;AAID;AACF,CAbD;;AAeAxB,OAAOyB,IAAP,CAAY,GAAZ,EAAiB,UAACZ,GAAD,EAAMC,GAAN,EAAc;AAC7B,MAAI,CAACD,IAAIa,IAAT,EAAe;AACbZ,QAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,cAAQ,GADW;AAEnBS,aAAO;AAFY,KAArB;AAID,GALD,MAKO;AACL,QAAMG,UAAU;AACdxB,UAAID,MAAM0B,MAAN,GAAe,CADL;AAEdC,iBAAWhB,IAAIa,IAAJ,CAASG,SAFN;AAGdC,gBAAUjB,IAAIa,IAAJ,CAASI,QAHL;AAIdC,cAAQlB,IAAIa,IAAJ,CAASK,MAJH;AAKdC,mBAAanB,IAAIa,IAAJ,CAASM,WALR;AAMdX,aAAOR,IAAIa,IAAJ,CAASL,KANF;AAOdY,YAAMpB,IAAIa,IAAJ,CAASO;AAPD,KAAhB;AASA/B,UAAMgC,IAAN,CAAWP,OAAX;AACAb,QAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,cAAQ,GADW;AAEnBE,YAAMU;AAFa,KAArB;AAID;AACF,CAtBD;;AAwBAQ,OAAOC,OAAP,GAAiBpC,MAAjB","file":"users.js","sourceRoot":"/home/emile/Desktop/Endpoint/api/v1","sourcesContent":["const express = require('express');\n\nconst router = express.Router();\nconst users = [\n  {\n    id: 1,\n    firstname: 'Emma',\n    lastname: 'Shema',\n    othername: 'Sano',\n    email: 'sano@gmail.com',\n    phoneNumber: '0782057791',\n    username: 'shemasano',\n    registered: '2018-01-17',\n    isAdmin: 'yes',\n  },\n  {\n    id: 2,\n    firstname: 'Cedric',\n    lastname: 'Shema',\n    othername: 'Sano',\n    email: 'sano@gmail.com',\n    phoneNumber: '0782057791',\n    username: 'shemasano',\n    registered: '2018-01-17',\n    isAdmin: 'yes',\n  },\n];\n\n\nrouter.get('/', (req, res) => {\n  res.status(200).json({\n    status: 200,\n    data: users,\n  });\n});\n\nrouter.get('/:id', (req, res) => {\n  const usr = users.find(c => c.topic === parseInt(req.params.id, 10));\n  if (usr) {\n    res.status(200).json({\n      status: 200,\n      data: usr,\n    });\n  } else {\n    res.status(500).json({\n      status: 500,\n      error: 'User not found',\n    });\n  }\n});\n\nrouter.post('/', (req, res) => {\n  if (!req.body) {\n    res.status(404).json({\n      status: 404,\n      error: 'missing body contents',\n    });\n  } else {\n    const addUser = {\n      id: users.length + 1,\n      createdOn: req.body.createdOn,\n      location: req.body.location,\n      images: req.body.images,\n      happeningOn: req.body.happeningOn,\n      topic: req.body.topic,\n      tags: req.body.tags,\n    };\n    users.push(addUser);\n    res.status(200).json({\n      status: 200,\n      data: addUser,\n    });\n  }\n});\n\nmodule.exports = router;\n"]}